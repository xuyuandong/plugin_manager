// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "behavior_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace antifraud {

void protobuf_ShutdownFile_behavior_5fdata_2eproto() {
  delete BehaviorData::default_instance_;
}

void protobuf_AddDesc_behavior_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  BehaviorData::default_instance_ = new BehaviorData();
  BehaviorData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_behavior_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_behavior_5fdata_2eproto {
  StaticDescriptorInitializer_behavior_5fdata_2eproto() {
    protobuf_AddDesc_behavior_5fdata_2eproto();
  }
} static_descriptor_initializer_behavior_5fdata_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int BehaviorData::kTimestampsFieldNumber;
#endif  // !_MSC_VER

BehaviorData::BehaviorData()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BehaviorData::InitAsDefaultInstance() {
}

BehaviorData::BehaviorData(const BehaviorData& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BehaviorData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BehaviorData::~BehaviorData() {
  SharedDtor();
}

void BehaviorData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BehaviorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BehaviorData& BehaviorData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_behavior_5fdata_2eproto();  return *default_instance_;
}

BehaviorData* BehaviorData::default_instance_ = NULL;

BehaviorData* BehaviorData::New() const {
  return new BehaviorData;
}

void BehaviorData::Clear() {
  timestamps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BehaviorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 timestamps = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timestamps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_timestamps())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_timestamps())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_timestamps;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BehaviorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 timestamps = 1;
  for (int i = 0; i < this->timestamps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->timestamps(i), output);
  }
  
}

int BehaviorData::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 timestamps = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->timestamps_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->timestamps(i));
    }
    total_size += 1 * this->timestamps_size() + data_size;
  }
  
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BehaviorData*>(&from));
}

void BehaviorData::MergeFrom(const BehaviorData& from) {
  GOOGLE_CHECK_NE(&from, this);
  timestamps_.MergeFrom(from.timestamps_);
}

void BehaviorData::CopyFrom(const BehaviorData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorData::IsInitialized() const {
  
  return true;
}

void BehaviorData::Swap(BehaviorData* other) {
  if (other != this) {
    timestamps_.Swap(&other->timestamps_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BehaviorData::GetTypeName() const {
  return "antifraud.BehaviorData";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace antifraud

// @@protoc_insertion_point(global_scope)
